scalar Date
scalar Year
scalar UUIDV1

## Book
type Book {
    id: UUIDV1!
    title: String!
    year: Year!
    isbn13: String
    author: String
	publisher: String
	genre: String!
    copies: Int!
    lends: [Lend!] # Lends associated with this book
}

input BookInput {
    title: String!
    year: Year!
    isbn13: String
    author: String
	publisher: String
	genre: String!
    copies: Int # If not provided, number of copies defaults to zero AKA not available
}


## Customer
type Customer {
    id: UUIDV1!
    name: String!
    surname: String!
    numberPhone: String
    lends: [Lend!] # Lends associated with this customer
}

input CustomerInput {
    name: String!
    surname: String!
    numberPhone: String
}


## Lend
type Lend {
    id: UUIDV1!
	book: Book!
    bookId: UUIDV1!
	customer: Customer!
    customerId: UUIDV1!
	borrowingDate: Date!
	expirationDate: Date!
	returnedDate: Date # Null until book is returned
}

input LendInput {
	bookId: UUIDV1!
	customerId: UUIDV1!
	borrowingDate: Date # If not provided, defaults to today's date
	expirationDate: Date # # If not provided, defaults to today's date + max allowed borrowing days
	returnedDate: Date # Null until book is returned
}



## Queries
type Query {
    book (id: UUIDV1!): Book
    books (
        pageNumber: Int,
        pageSize: Int,
        title: String,
        year: Year,
        author: String,
        publisher: String,
        genre: String,
        available: Boolean
    ): [Book!]
    
    customer (id: UUIDV1!): Customer
    customers (
        name: String,
        surname: String,
        numberPhone: String
    ): [Customer!]

    lend (id: UUIDV1!): Lend
    lends (
        pageNumber: Int,
        pageSize: Int,
        bookId: UUIDV1,
        customerId: UUIDV1,
        borrowingDate: Date,
        expirationDate: Date,
        returnedDate: Date,
        expired: Boolean,
        returned: Boolean
    ): [Lend!]
}


## Mutations
type Mutation {
    addBook (input: BookInput!): Book
    updateBook (id: UUIDV1!, input: BookInput!): Book
    deleteBook (id: UUIDV1!): Boolean

    addLend (input: LendInput!): Lend
    updateLend (id: UUIDV1!, input: LendInput!): Lend
    deleteLend (id: UUIDV1!): Boolean

    addCustomer (input: CustomerInput!): Customer
    updateCustomer (id: UUIDV1!, input: CustomerInput!): Customer
    deleteCustomer (id: UUIDV1!): Boolean
}